{
	"info": {
		"_postman_id": "fd78c084-4085-47f3-8583-61f2b90ca290",
		"name": "COVID19_the_game_villain",
		"description": "This is a sample nodejs express server.\n\nContact Support:\n Name: COVID19 The gaes APIs Support\n Email: morisidivine@gmail.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "Returns a list of users.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71125a5a-a320-48d0-854a-b57354282897",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user"
							]
						},
						"description": "The users are returned in a array in DES score order."
					},
					"response": [
						{
							"name": "A JSON array of user names",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"username\": \"<string>\",\n  \"score\": \"<integer>\"\n },\n {\n  \"username\": \"<string>\",\n  \"score\": \"<integer>\"\n }\n]"
						}
					]
				},
				{
					"name": "Add a new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "19be3164-e9ce-4120-8f47-b9d6a6242060",
								"exec": [
									"let r = Math.random().toString(36).substring(7);",
									"",
									"pm.environment.set(\"username\", r);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "31219d6a-ae8e-476a-a383-e385479e9ce2",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"score\": 100\n}"
						},
						"url": {
							"raw": "{{url}}/v1/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"score\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Duplicate Username error handling",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6c652dbb-9901-47c4-8578-dd002ee44dd0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "797d4133-2d07-4dd3-9ed6-817731ab19a6",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"score\": 100\n}"
						},
						"url": {
							"raw": "{{url}}/v1/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"score\": \"<integer>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update user score",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a27c7a49-d764-4794-a3b0-a286c89f6c52",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"score\": 200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add user with put",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "03d3a0d8-8197-4d95-8479-8a73594d6f2d",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4f299edf-4f8b-4874-be95-8ec68c3913a8",
								"exec": [
									"let r = Math.random().toString(36).substring(7);",
									"",
									"pm.environment.set(\"username_new\", r);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username_new}}\",\n    \"score\": 200\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/v1/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Opens api docs",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2cfdcc9-8384-4a65-a0a4-d2bc170cfe88",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api-docs",
							"host": [
								"{{url}}"
							],
							"path": [
								"api-docs"
							]
						},
						"description": "The users are returned in a array in DES score order."
					},
					"response": [
						{
							"name": "A JSON array of user names",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"username\": \"<string>\",\n  \"score\": \"<integer>\"\n },\n {\n  \"username\": \"<string>\",\n  \"score\": \"<integer>\"\n }\n]"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://supervillain.herokuapp.com/v1",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}