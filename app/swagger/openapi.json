{
  "openapi": "3.0.3",
  "info": {
    "title": "COVID19 the game - villain",
    "description": "The function of this API is to provide support to the COVID-19 game to manage application registrations as well as user scores.<br /><br /><br />This is an active project and there are regular changes to this API. If you find any defects please raise them using this [link](https://github.com/ale-sanchez-g/villain/issues)<br /><br /><br />To use this API you need to first register your application using the `/auth/gentoken` path and this will email a 3 day JWT, that you can use as Auth in the other API paths.",
    "contact": {
      "name": "COVID19 The game API Support",
      "email": "morisidivine@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://github.com/ale-sanchez-g/villain/blob/master/LICENSE"
    },
    "version": "1.3.0"
  },
  "servers": [
    {
      "url": "https://supervillan-81ce46d107ff.herokuapp.com",
      "description": "Main (production) server"
    },
    {
      "url": "http://localhost:3000",
      "description": "localhost server"
    }
  ],
  "tags": [
    {
      "name": "Application Authorisation",
      "description": "Registration and verification of Applications"
    },
    {
      "name": "User Authentication",
      "description": "Registration and Authentication of Users"
    },
    {
      "name": "User Leaderboard",
      "description": "Add users and points into the leaderboard"
    },
    {
      "name": "User",
      "description": "Manages the user authenticated transactions"
    },
    {
      "name": "Maintain",
      "description": "Supporting endpoints for health and test"
    }
  ],
  "paths": {
    "/auth/gentoken": {
      "post": {
        "tags": [
          "Application Authorisation"
        ],
        "requestBody": {
          "description": "Send application Key",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "example": "crazyFrog"
                  },
                  "email": {
                    "type": "string",
                    "example": "crazyFrog@yopmail.com"
                  },
                  "returnKey": {
                    "type": "boolean",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "summary": "Create a token for your app",
        "responses": {
          "200": {
            "description": "Token created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emailTo": {
                      "type": "string",
                      "example": "crazyFrog@yopmail.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error from DB proxy to user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/verifytoken": {
      "get": {
        "tags": [
          "Application Authorisation"
        ],
        "summary": "Verify your token still valid.",
        "security": [
          {
            "JWT": []
          }
        ],
        "responses": {
          "200": {
            "description": "JWT validated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "app_id": {
                      "type": "integer"
                    },
                    "app": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "App name not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/user/register": {
      "post": {
        "tags": [
          "User Authentication"
        ],
        "summary": "This request enables you to register the user",
        "description": "User and password is register in the DB",
        "requestBody": {
          "description": "Registers a new user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "responses": {
          "200": {
            "description": "The user is created successfully"
          },
          "400": {
            "description": "User fail to be created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "user already exist"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Application authetication declined",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "incorrect user name and password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/user/login": {
      "post": {
        "tags": [
          "User Authentication"
        ],
        "summary": "User Login",
        "description": "User and password is read from the DB",
        "requestBody": {
          "description": "User login",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "responses": {
          "200": {
            "description": "Login sucessfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjcybWdpdyIsImV4cGlyZXNJbiI6IjMgbWluIiwiaWF0IjoxNjM2Nzk2NjkwLCJleHAiOjE2MzY3OTY4NzB9.OexixxQrQBOXu58dZhG4jCVnB8CykK3KyxCA6kgqIye8duL4MffLexaCYt6rvO97Ib7tk9wjj9N3KGiTzu_f3g"
                    },
                    "expiresIn": {
                      "type": "string",
                      "example": "3 min"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unable to login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "user already exist"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Application authetication declined",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "incorrect user name and password"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/user": {
      "get": {
        "tags": [
          "User Leaderboard"
        ],
        "summary": "Returns a list of users.",
        "description": "The users are returned in a array in DES score order.",
        "security": [
          {
            "JWT": []
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of user names",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "score": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Leaderboard"
        ],
        "summary": "Add a new user",
        "requestBody": {
          "description": "Adds a new user to the leaderboard",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "score": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Leaderboard"
        ],
        "summary": "Update user",
        "requestBody": {
          "description": "updates user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "score": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "responses": {
          "204": {
            "description": "Updated"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Leaderboard"
        ],
        "summary": "Delete users",
        "parameters": [
          {
            "in": "header",
            "name": "delete-key",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "delete user has an added header protection as is only for operational support",
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/user/{name}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by name.",
        "description": "The user is returned in a array, must use the **user login authentication token** not the application token.",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "JWT": []
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of user names",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "username": {
                        "type": "string"
                      },
                      "score": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Maintain"
        ],
        "summary": "Check system health",
        "description": "This endpoint provides information on the host",
        "responses": {
          "200": {
            "description": "A JSON array of stats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uptime": {
                      "type": "number",
                      "example": 16701.766630288
                    },
                    "message": {
                      "type": "string",
                      "example": "ok"
                    },
                    "date": {
                      "type": "string",
                      "example": "2023-09-11T04:42:41.062Z"
                    },
                    "cpu": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "model": {
                            "type": "string",
                            "example": "Intel(R) Xeon(R) Platinum 8375C CPU @ 2.90GHz"
                          },
                          "speed": {
                            "type": "integer",
                            "example": 12345
                          },
                          "times": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Something is wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fibonacci/{number}": {
      "get": {
        "tags": [
          "Maintain"
        ],
        "summary": "Load CPU",
        "description": "Endpoint to simulate random CPU spike",
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Number response",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/textResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "textResponse": {
        "type": "string",
        "example": "1"
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}